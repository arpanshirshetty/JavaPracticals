Prac10: Multi theading Even Odd

//Create package thread

//Even class

package Threads;
class Even extends Thread
{
public void run() 
{
	int n,m=0,flag=0;
	System.out.println("Even Numbers Thread!!!");
	try {
	for(int i=1;i<=20;i++)
	{
		if(i%2==0)
			System.out.println(i);
		Thread.sleep(500);
	}
}catch(InterruptedException e){}
}
}
--------------------------------------------------------------------------------------------------------
//Odd class
package Threads;
class Odd extends Thread
{
	public void run() 
	{
		System.out.println("Odd Numbers Thread!!!");
		try{
		for(int i=1;i<=20;i++)
		{
			if(i%2!=0)
				System.out.println(i);
			Thread.sleep(500);		
		}
		}catch (InterruptedException e){}
}
}
--------------------------------------------------------------------------------------------------
//Prime Class
package Threads;

public class Prime extends Thread {
    private double number;

	public void run()
    {
		System.out.println("Prime Numbers Are:");
		for (int num = 2; num <= 20; num++) {
            if (C(num)) {
                System.out.println(num);
            }
        }}
	
		private boolean C(int number) {
	        if (number < 2) {
	            return false;
	        }
	        for (int i = 2; i <= Math.sqrt(number); i++) {
	            if (number % i == 0) {
	                return false;
	            }
	        }
	        return true;
	    }
	}
----------------------------------------------------------------------------------------------------------
//Class MultiThreading

package Threads;

 class MultiThreading {
	 public static void main(String args[]) 
		{
			Even t1=new Even();
			t1.start();
			try{
			t1.join();
			}catch(InterruptedException e){}
			Odd t2=new Odd();
			t2.start();
			try{
				t2.join();
			}catch(InterruptedException e){}
			Prime t3=new Prime();
			t3.start();
			}
	}
-------------------------------------------------------------------------------------------------------------